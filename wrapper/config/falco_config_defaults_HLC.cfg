
;;--Initialize some structures if they don't already exist
ctrl.dummy = 1;
est.dummy = 1;

P1.full.dummy = 1;
P1.compact.dummy = 1;

P2.dummy = 1;

dm1.dummy = 1;
dm2.dummy = 1;
dm1.dummy = 1;
dm2.dummy = 1;

P3.dummy = 1;

F3.full.dummy = 1;
F3.compact.dummy = 1;

P4.full.dummy = 1;
P4.compact.dummy = 1;

F4.compact.dummy = 1;
F4.full.dummy = 1;
F4.corr.dummy = 1;
F4.score.dummy = 1;

;;--Record Keeping
SeriesNum = 867
TrialNum = 5309

;;--WFSC. Iterations and Control Matrix Relinearization
controller = 'EFC'
Nitr = 10
relinItrVec = 1:10

;;--Special Computational Settings
flagParfor = false
useGPU = false

;;--Coronagraph and Pupil Type
coro = 'HLC'
flagApod = false
whichPupil = 'LUVOIR_B_offaxis'

;;--General
centering = 'pixel'

;;--Pupil Plane and DM Plane Properties
d_P2_dm1 = 0
d_dm1_dm2 = 1

;;--Bandwidth and Wavelength Specs
lambda0 = 500e-9
fracBW = 0.01
Nsbp = 1
Nwpsbp = 1





;;--Estimator Options:
; - 'perfect' for exact numerical answer from full model
; - 'pwp-bp' for pairwise probing with batch process estimation
; - 'pwp-kf' for pairwise probing with Kalman filter [NOT AVAILABLE YET]
; - 'pwp-iekf' for pairwise probing with iterated extended Kalman filter  [NOT AVAILABLE YET]
estimator = 'perfect';

;;--New variables for estimation:
est.probe.Npairs = 3;%2;     % Number of pair-wise probe PAIRS to use.
est.probe.whichDM = 1;    % Which DM # to use for probing. 1 or 2. Default is 1
est.probe.radius = 12;%20;    % Max x/y extent of probed region [actuators].
est.probe.offsetX = 0;   % offset of probe center in x [actuators]. Use to avoid central obscurations.
est.probe.offsetY = 14;    % offset of probe center in y [actuators]. Use to avoid central obscurations.
est.probe.axis = 'alternate';     % which axis to have the phase discontinuity along [x or y or xy/alt/alternate]
est.probe.gainFudge = 1;     % empirical fudge factor to make average probe amplitude match desired value.

flagSim = true;
layout = 'Fourier';


;;--DM Actuator characteristics
dm1.dx_inf0 = 1e-4
#dm1.dm_spacing = 1e-3
;dm1.inf0 = 1*fitsread('influence_dm5v2.fits')
dm2.dx_inf0 = 1e-4
#dm2.dm_spacing = 1e-3
;dm2.inf0 = 1*fitsread('influence_dm5v2.fits')

dm1.inf_fn = 'influence_dm5v2.fits';
dm2.inf_fn = 'influence_dm5v2.fits';

;;--User defined actuator pitch
dm1.dm_spacing = 1e-3
dm2.dm_spacing = 1e-3

dm1.inf_sign = '+'
dm2.inf_sign = '+'


;;--Zernikes to suppress with controller
jac.zerns = 1   ;[1 2 3] ;;--Which Zernike modes to include in Jacobian. Given as the max Noll index. Always include at least 1 for the on-axis piston mode.
jac.Zcoef = 1e-9*ones(size(mp.jac.zerns)) ;;--meters RMS of Zernike aberrations. (piston value is reset to 1 later)
    
;;--Zernikes to compute sensitivities for
eval.indsZnoll = 2:3; ;;--Noll indices of Zernikes to compute values for
;;--Annuli to compute 1nm RMS Zernike sensitivities over. Columns are [inner radius, outer radius]. One row per annulus.
eval.Rsens = [3, 4]  ; 4, 8]  












;;--Focal Lengths
fl = 1

;;--Focal Plane Mask (at F3) Properties:
dm9.V0coef = 0

;;--Complex-valued FPM
FPM.d0fac = 4

;;--FPM materials
t_diel_bias_nm = 0

;;--FPM resolution
F3.full.res = 30
F3.compact.res = 30

;;--FPM radii and angle
F3.Rin = 2.7
F3.RinA = 2.7
F3.Rout = Inf
F3.ang = 180

;;--Max +/- Voltage restrictions on DM1 and DM2
dm1.maxAbsV = 150
dm2.maxAbsV = 150

;;--Controller Settings
ctrl.dm9regfacVec = 1

;;--Whether to include planet in the images
planetFlag = false

;;--Throughput calculations
thput_radius = 0.7
thput_eval_x = 6
thput_eval_y = 0

;;--Spatial pixel weighting of the Control Jacobian
WspatialDef = []

;;--Threshold level for culling actuators from the Jacobian
logGmin = -6

;;--Deformable Mirror (DM) Parameters
dm_ind = [1 2]
dm_weights = ones(9,1)

;;--DM1 parameters
dm1.Nact = 48
dm1.VtoH = 1*1e-9*ones(48)
dm1.xtilt = 0
dm1.ytilt = 0
dm1.zrot = 0
dm1.xc = (48/2 - 1/2)
dm1.yc = (48/2 - 1/2)
dm1.edgeBuffer = 1

;;--DM2 parameters
dm2.Nact = 48
dm2.VtoH = 1*1e-9*ones(48)
dm2.xtilt = 0
dm2.ytilt = 0
dm2.zrot = 0
dm2.xc = 48/2 - 1/2
dm2.yc = 48/2 - 1/2
dm2.edgeBuffer = 1



;;--Aperture stops at DMs
flagDM1stop = false
flagDM2stop = false
dm1.Dstop = 48*1e-3
dm2.Dstop = 48*1e-3

;;--DM9 parameters
dm9.actres = 10
dm9.Vmin = 0
dm9.Vmax = 400
dm9.Nact = ceil_even(2*2.7*10)
dm9.xtilt = 0
dm9.ytilt = 0
dm9.zrot = 0

;;--DM8 parameters
dm8.Vmin = 0
dm8.Vmax = 300

;;--Cropped influence function for FPM phase
dm9.FPMbuffer = 0

;;--Pupil Plane Properties
P2.D = (48-2)*1e-3
P3.D = (48-2)*1e-3
P4.D = (48-2)*1e-3

;;--Lyot plane resolution must be the same as input pupil's in order to use Babinet's principle
;P4.full.Nbeam = mp.P1.full.Nbeam
;P4.compact.Nbeam = mp.P1.compact.Nbeam

;;--Final Focal Plane (F4) Properties
;F4.score.Rin = mp.F4.corr.Rin
F4.corr.Rout  = 10
F4.score.Rout = 10
F4.corr.ang  = 180
F4.score.ang = 180
F4.sides = 'both'
F4.res = 3
F4.full.res = 6
F4.FOV = 1 + 10



[controller_gridsearchEFC]
dm_ind = [1 2 9]
ctrl.log10regVec = -5:1:-2
maxAbsdV = 80
ctrl.dmfacVec = 1
logGmin = -7
Nitr = 20
relinItrVec = 1:20

[controller_plannedEFC]
dm_ind = [1 2 9]
ctrl.log10regVec = -5:1:-2
maxAbsdV = 80
logGmin = -7
ctrl = load('schedule.mat')

[controller_conEFC]
dm1.dVpvMax = 30
dm2.dVpvMax = 30
ctrl.dmfacVec = 1
ctrl.muVec = 10.^(5)

;;Simple Pupil
[whichPupil_Simple]
P1.D = 4
P1.Dfac = 1
P1.full.Nbeam = 250
P1.compact.Nbeam = 250
P4.full.Nbeam = 250
P4.compact.Nbeam = 200
P1.IDnorm = 0
P1.ODnorm = 1
P4.IDnorm = 0.3
P4.ODnorm = 0.85
P1.num_strut = 0
P1.strut_angs = []
P1.strut_width = []
P4.num_strut = 0
P4.strut_angs = []
P4.strut_width = []

[whichPupil_WFIRST180718]
P1.IDnorm = 0.303
P1.D = 2.3631
P1.Dfac = 1
P4.wStrut = 3.9/100.
P1.full.Nbeam = 324
P1.compact.Nbeam = 324
P4.full.Nbeam = 250
P4.compact.Nbeam = 200

[whichPupil_WFIRST20180103]
P1.IDnorm = 0.31
P1.D = 2.3631
P1.Dfac = 1
pup_strut_width = 3.22/100.
LS_strut_width = 3.8/100.
P1.full.Nbeam = 324
P1.compact.Nbeam = 324
P4.full.Nbeam = 250
P4.compact.Nbeam = 200

[whichPupil_WFIRST_onaxis]
P1.IDnorm = 0.31
P1.D = 2.3631
P1.Dfac = 1
pup_strut_width = 3.22/100.
LS_strut_width = 3.8/100.
P1.full.Nbeam = 324
P1.compact.Nbeam = 324
P4.full.Nbeam = 250
P4.compact.Nbeam = 200

[whichPupil_LUVOIRA5]
P1.IDnorm = 0.10
P1.D = 15.2
P1.Dfac = 15.2/13.7
LS_strut_width = 1.4/100.
;;LS_strut_width = mp.P4.wStrut
P1.full.Nbeam = 1000
P1.compact.Nbeam = 500
P4.full.Nbeam = 300
P4.compact.Nbeam = 200

[whichPupil_LUVOIR_B_offaxis]
P1.IDnorm = 0
P1.D = 7.989
P1.full.Nbeam = 1000
P1.compact.Nbeam = 500
P4.full.Nbeam = 300
P4.compact.Nbeam = 200

[coro_lc]
P4.full.Nbeam = 250
P4.compact.Nbeam = 250

[coro_hlc]
P4.full.Nbeam = 250
P4.compact.Nbeam = 250

[coro_vortex]
P4.full.Nbeam = 250
P4.compact.Nbeam = 250

[coro_vc]
P4.full.Nbeam = 250
P4.compact.Nbeam = 250

[coro_avc]
P4.full.Nbeam = 250
P4.compact.Nbeam = 250

[dm9_inf0name]
dm9.dx_inf0_act = 1/10
dm9.inf0 = 1*fitsread('influence_dm5v2.fits')

[dm9_inf0name_3x3]
dm9.inf0 = 1/4*[1, 2, 1; 2, 4, 2; 1, 2, 1]
dm9.dx_inf0_act = 1/2
F3.compact.res = 10/0.5
F3.full.res = 10/0.5

[dm9_inf0name_Xinetics]
dm9.inf0 = 1*fitsread('influence_dm5v2.fits')
dm9.dx_inf0_act = 1/10
